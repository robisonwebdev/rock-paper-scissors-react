{"version":3,"sources":["components/Scoreboard.js","components/Header.js","components/GamePiece.js","components/GameInterface.js","components/Button.js","components/GameForm.js","components/GameStatus.js","components/GameInfo.js","components/Gameboard.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Scoreboard","playerScore","computerScore","className","Header","GamePiece","data_value","icon","onClick","GameInterface","iconHover","competitor","gamePieceClick","gameStart","Button","text","type","GameForm","handleChange","handleSubmit","inputValue","onSubmit","name","onChange","placeholder","value","GameStatus","message","winner","GameInfo","showGameForm","showGameStatus","Gameboard","playerName","Main","handleScoreUpdate","setPlayerName","useState","computerPick","setComputerPick","computeWinner","setComputeWinner","setGameStart","setInputValue","setMessage","playerPick","setPlayerPick","showResetBtn","setShowResetBtn","setShowGameForm","setShowGameStatus","setWinner","useEffect","gameLogic","player","computer","console","log","event","target","getAttribute","Math","floor","random","getComputersPick","preventDefault","Footer","address","href","rel","App","setComputerScore","setPlayerScore","update","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.613dcd97.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Scoreboard.css';\n\nconst Scoreboard = ({ playerScore, computerScore}) => {\n  return (\n    <div className='scoreboard'>\n      <p>{playerScore}</p>\n      <p>|</p>\n      <p>{computerScore}</p>\n    </div>\n  );\n}\n\nexport default Scoreboard;","import React from 'react';\nimport Scoreboard from './Scoreboard';\nimport '../styles/Header.css';\n\nconst Header = ({ computerScore, playerScore }) => {\n  return (\n    <header>\n      <Scoreboard\n        computerScore={computerScore}\n        playerScore={playerScore}\n      />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport '../styles/GamePiece.css';\n\nconst GamePiece = ({ data_value, className, icon, onClick }) => {\n    return (\n        <i\n            className={`gamePiece ${icon} ${className}`}\n            data_value={data_value}\n            onClick={onClick}\n        >\n        </i>\n    );\n}\n\nexport default GamePiece;","import React from 'react';\nimport GamePiece from './GamePiece';\nimport '../styles/GameInterface.css';\n\nconst GameInterface = ({ className, competitor, gamePieceClick, gameStart }) => {\n  let iconHover;\n\n  if (gameStart) {\n    iconHover = 'iconHover';\n  }\n\n  return (\n    <div className={`gameInterface ${className}`}>\n      <h2>{competitor || className}</h2>\n      <div className='gamePieces'>\n        <GamePiece\n          data_value='rock'\n          className={iconHover}\n          icon='las la-hand-rock'\n          onClick={gamePieceClick}\n        />\n        <GamePiece\n          data_value='paper'\n          className={iconHover}\n          icon='las la-hand-paper'\n          onClick={gamePieceClick}\n        />\n        <GamePiece\n          data_value='scissors'\n          className={iconHover}\n          icon='las la-hand-scissors'\n          onClick={gamePieceClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default GameInterface;","import React from 'react';\nimport '../styles/Button.css';\n\nconst Button = ({ className, onClick, text, type }) => {\n  return (\n    <button className={className} onClick={onClick} type={type}>{text}</button>\n  );\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\nimport '../styles/GameForm.css';\n\nconst GameForm = ({ handleChange, handleSubmit, inputValue }) => {\n    return (\n        <form className='gameForm' onSubmit={handleSubmit}>\n            <input type='text' name='name' onChange={handleChange} placeholder='Enter your name' value={inputValue} />\n            <Button className='submitBtn' type='submit' text='Start Game!' />\n        </form>\n    );\n}\n\nexport default GameForm;","import React from 'react';\nimport '../styles/GameStatus.css';\n\nconst GameStatus = ({ message, winner }) => {\n    return (\n        <div className='gameStatus'>\n            <h3>{winner}</h3>\n            <p>{message}</p>\n        </div>\n    );\n}\n\nexport default GameStatus;","import React from 'react';\nimport GameForm from './GameForm';\nimport GameStatus from './GameStatus';\nimport '../styles/GameInfo.css';\n\nconst GameInfo = ({ handleChange, handleSubmit, inputValue, message, showGameForm, showGameStatus, winner }) => {\n    return (\n        <div className='gameInfo'>\n            {showGameForm\n                ?   <GameForm\n                        handleChange={handleChange}\n                        handleSubmit={handleSubmit}\n                        inputValue={inputValue}\n                    />\n                :   null\n            }\n            {showGameStatus\n                ?   <GameStatus\n                        message={message}\n                        winner={winner}\n                    />\n                :   null}\n        </div>\n    );\n}\n\nexport default GameInfo;","import React from 'react';\nimport GameInterface from './GameInterface';\nimport GameInfo from './GameInfo';\nimport '../styles/Gameboard.css';\n\nconst Gameboard = ({ gamePieceClick, gameStart, handleChange, handleSubmit, inputValue, message, playerName, showGameForm, showGameStatus, winner }) => {\n  return (\n    <div className='gameboard'>\n      <GameInterface\n        className='Player'\n        competitor={playerName}\n        gamePieceClick={gamePieceClick}\n        gameStart={gameStart}\n      />\n      <GameInfo\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        inputValue={inputValue}\n        message={message}\n        showGameForm={showGameForm}\n        showGameStatus={showGameStatus}\n        winner={winner}\n      />\n      <GameInterface\n        className='Computer'\n        competitor='Computer'\n      />\n    </div>\n  );\n}\n\nexport default Gameboard;","import React, { useEffect, useState } from 'react';\nimport Gameboard from './Gameboard';\nimport Button from './Button';\nimport '../styles/Main.css';\n\nconst Main = ({ handleScoreUpdate, playerName, setPlayerName }) => {\n  const [computerPick, setComputerPick] = useState(null);\n  const [computeWinner, setComputeWinner] = useState(false);\n  const [gameStart, setGameStart] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [message, setMessage] = useState('Select Rock, Paper, or Scissors');\n  const [playerPick, setPlayerPick] = useState(null);\n  const [showResetBtn, setShowResetBtn] = useState(false);\n  const [showGameForm, setShowGameForm] = useState(true);\n  const [showGameStatus, setShowGameStatus] = useState(false);\n  const [winner, setWinner] = useState('');\n\n  useEffect(() => {\n    if (computeWinner) {\n      gameLogic(playerPick, computerPick);\n    }\n  }, [computeWinner])\n\n  const getComputersPick = () => {\n    const randomNumber = Math.floor(Math.random() * 3);\n\n    switch (randomNumber) {\n      case 0:\n        setComputerPick('rock');\n        break;\n      case 1:\n        setComputerPick('paper');\n        break;\n      case 2:\n        setComputerPick('scissors');\n        break;\n    }\n  }\n\n  const gameLogic = (player, computer) => {\n    console.log('Player Pick:', player);\n    console.log('Computer Pick:', computer);\n\n    if (player === computer) {\n      setWinner('Tie Game!')\n      setMessage('No winners, try again!');\n      setComputeWinner(false);\n    } \n\n    // Rock\n    if (player === 'rock') {\n      if (computer === 'scissors') {\n        setWinner(`${playerName} wins!`);\n        setMessage('Rock beats scissors!');\n        setComputeWinner(false);\n        handleScoreUpdate('player');\n      } else if (computer === 'paper') {\n        setWinner('Computer wins!')\n        setMessage('Paper beats rock!');\n        setComputeWinner(false);\n        handleScoreUpdate('computer');\n      }\n    }\n\n    // Paper\n    if (player === 'paper') {\n      if (computer === 'rock') {\n        setWinner(`${playerName} wins!`);\n        setMessage('Paper beats rock!');\n        setComputeWinner(false);\n        handleScoreUpdate('player');\n      } else if (computer === 'scissors') {\n        setWinner('Computer wins!')\n        setMessage('Scissors beats paper!');\n        setComputeWinner(false);\n        handleScoreUpdate('computer');\n      }\n    }\n\n    // Scissors\n    if (player === 'scissors') {\n      if (computer === 'paper') {\n        setWinner(`${playerName} wins!`);\n        setMessage('Scissors beats paper!');\n        setComputeWinner(false);\n        handleScoreUpdate('player');\n      } else if (computer === 'rock') {\n        setWinner('Computer wins!')\n        setMessage('Rock beats scissors!');\n        setComputeWinner(false);\n        handleScoreUpdate('computer');\n      }\n    }\n  }\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  }\n\n  const handleReset = () => {\n    handleScoreUpdate('reset');\n    setPlayerName('');\n    setShowGameForm(true);\n    setShowGameStatus(false);\n    setShowResetBtn(false);\n    setGameStart(false);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (inputValue !== '') {\n      setGameStart(true);\n      setPlayerName(inputValue);\n      setShowResetBtn(true);\n      setShowGameForm(false);\n      setShowGameStatus(true);\n      setInputValue('');\n    }\n  }\n\n  const gamePieceClick = (event) => {\n    if (gameStart) {\n      setPlayerPick(event.target.getAttribute('data_value'));\n      getComputersPick();\n      setComputeWinner(true);\n    }\n  }\n\n  return (\n    <main>\n      <Gameboard\n        gamePieceClick={gamePieceClick}\n        gameStart={gameStart}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        inputValue={inputValue}\n        message={message}\n        playerName={playerName}\n        showGameStatus={showGameStatus}\n        showGameForm={showGameForm}\n        winner={winner}\n      />\n      {showResetBtn\n        ? <Button\n            className='resetBtn'\n            onClick={handleReset}\n            text='Reset Game'\n            type='button'\n          />\n        : null\n      }\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\nimport '../styles/Footer.css';\n\nconst Footer = ({ address, name, text}) => {\n  return (\n    <footer>\n      <small>{text}<a href={address} rel='noreferrer' target='_blank'>{name}</a></small>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport './styles/App.css';\n\nconst App = () => {\n  const [computerScore, setComputerScore] = useState(0);\n  const [playerName, setPlayerName] = useState('');\n  const [playerScore, setPlayerScore] = useState(0);\n\n  const handleScoreUpdate = (update) => {\n    if (update === 'player') {\n      setPlayerScore(playerScore + 1);\n    }\n\n    if (update === 'computer') {\n      setComputerScore(computerScore + 1);\n    }\n\n    if (update === 'reset') {\n      setComputerScore(0)\n      setPlayerScore(0);\n    }\n  }\n\n  return (\n    <div className='app'>\n      <Header\n        computerScore={computerScore}\n        playerScore={playerScore}\n      />\n      <Main\n        handleScoreUpdate={handleScoreUpdate}\n        playerName={playerName}\n        setPlayerName={setPlayerName}\n      />\n      <Footer\n        address='https://github.com/robisonwebdev'\n        name='David Robison'\n        text='Developed by '\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}